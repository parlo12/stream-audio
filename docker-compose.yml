# Enhanced docker-compose.prod.yml with persistent storage
version: "3.9"

services:
  redis:
    image: redis:7-alpine
    restart: always
    ports: ["6379:6379"]
    volumes:
      - redis_data:/data
      - ./logs/redis:/var/log/redis
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  auth-service:
    build:
      context: .
      dockerfile: auth-service/Dockerfile
    restart: always
    env_file: .env
    environment:
      GIN_MODE: "release"
      DB_SSLMODE: "${DB_SSLMODE:-require}"
      PGSSLMODE: "${PGSSLMODE:-require}"
      LOG_LEVEL: "${LOG_LEVEL:-info}"
    depends_on:
      - redis
    ports: ["8082:8082"]
    volumes:
      - ./logs/auth:/app/logs
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8082/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  content-service:
    build:
      context: .
      dockerfile: content-service/Dockerfile
    restart: always
    env_file: .env
    environment:
      GIN_MODE: "release"
      DB_SSLMODE: "${DB_SSLMODE:-require}"
      PGSSLMODE: "${PGSSLMODE:-require}"
      AUTH_SERVICE_URL: "http://auth-service:8082"
      LOG_LEVEL: "${LOG_LEVEL:-info}"
      AUDIO_STORAGE_PATH: "/app/audio"
    depends_on:
      - redis
      - auth-service
    ports: ["8083:8083"]
    volumes:
      - content-audio-persistent:/app/audio  # Enhanced persistent storage
      - content-covers-persistent:/app/uploads/covers  # Enhanced persistent storage
      - ./logs/content:/app/logs
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8083/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
 
  content-audio:
   
  content-covers:

  
  # New persistent volumes that survive container recreation
  content-audio-persistent:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/stream-audio-data/audio
  content-covers-persistent:
    driver: local  
    driver_opts:
      type: none
      o: bind
      device: /opt/stream-audio-data/covers
  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/stream-audio-data/redis

networks:
  default:
    name: stream-audio-network